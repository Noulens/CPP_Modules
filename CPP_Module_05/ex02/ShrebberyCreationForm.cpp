/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrebberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: tnoulens <tnoulens@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/11/30 19:11:55 by tnoulens          #+#    #+#             */
/*   Updated: 2022/11/30 21:24:42 by tnoulens         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrebberyCreationForm.hpp"

static void	draw_trees(std::ofstream &to_write);

ShrebberyCreationForm::ShrebberyCreationForm(): Form("ShrebberyCreationForm", 145, 137), _target("test")
{
	std::cout << "SC std constructed \n";
}

ShrebberyCreationForm::ShrebberyCreationForm(const std::string &target): Form("ShrebberyCreationForm", 145, 137), _target(target)
{
	std::cout << "SC param constructed \n";
}

ShrebberyCreationForm::~ShrebberyCreationForm()
{
	std::cout << "SC destructed \n";
}

ShrebberyCreationForm::ShrebberyCreationForm(const ShrebberyCreationForm &copy): Form(copy.getName(), copy.getSignedClearance(), copy.getExecuteClearance()), _target(copy.getTarget())
{
	std::cout << "SC copy constructor \n";
}

ShrebberyCreationForm &ShrebberyCreationForm::operator = (const ShrebberyCreationForm &assign)
{
	(void)assign;
	std::cout << "SC assign \n";
	return (*this);
}

const std::string	ShrebberyCreationForm::getTarget() const
{
	return (this->_target);
}

void	ShrebberyCreationForm::form_exec(const Bureaucrat &executor) const
{
	std::string		newfile = this->getTarget() + "_shrubbery";
	std::ofstream	to_write;
	to_write.open(newfile.c_str());
	try
	{
		if (!to_write)
		{
			std::cout << "not created !" << std::endl;
			throw std::exception();
		}
	}
	catch (std::exception &e)
	{
		std::cerr << e.what() << '\n';
	}
	Form::execute(executor);
	draw_trees(to_write);
	to_write.close();
}

static void	draw_trees(std::ofstream &to_write)
{
	to_write << "██████████████████████████████████████████████████████▒▒▒▒▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "████████████████████████████████████████▓▓▓▓████████▓▓▒▒▒▒▒▒▒▒▓▓████████████▓▓██▓▓▒▒▓▓████████████████████████▓▓▒▒▒▒████████████████████████████████████████████████████████" << std::endl;
	to_write << "██████▓▓▒▒██████████████████████▓▓████▒▒▒▒▒▒▓▓████▓▓▒▒▒▒▒▒▒▒▓▓▒▒▓▓██████████▓▓▒▒▒▒▓▓██████████████████████▓▓▒▒▒▒▒▒▒▒▓▓██████████████████████████████████████████████████████" << std::endl;
	to_write << "██████▓▓▒▒▒▒██████████████████▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██████▓▓▒▒▓▓████████▓▓▒▒▓▓████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████████████████████████████▓▓▓▓▓▓██████████████████" << std::endl;
	to_write << "▓▓████▒▒▒▒▒▒████████████████▓▓▒▒▒▒▓▓▒▒▒▒▒▒██████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓██▓▓▓▓████████▓▓▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████████████████████████▓▓▒▒▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓██████" << std::endl;
	to_write << "██████▓▓▒▒▒▒████████████████▓▓▒▒▒▒▒▒▒▒▒▒▓▓████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▓▓████████████▒▒██▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▓▓▒▒▒▒▓▓██████████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓████" << std::endl;
	to_write << "████████▓▓▒▒████████████████▓▓▒▒▒▒▒▒▒▒▓▓████▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▓▓████████████████▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▓▓▒▒▒▒▓▓████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓" << std::endl;
	to_write << "▓▓██████▓▓▓▓████████████████▓▓▒▒░░░░▒▒▓▓██▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒████████████████▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▒▒▒▒▓▓████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒▒▒▒▒" << std::endl;
	to_write << "▒▒██████████████████████████▒▒░░░░░░▓▓██▓▓▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓████████████████▒▒░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▒▒▒▒▓▓████████▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░▒▒" << std::endl;
	to_write << "░░░░▓▓██████████████████████▒▒░░░░▓▓██▓▓▒▒░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓████████████████░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒██▓▓▒▒▒▒▓▓████▓▓▒▒▒▒▒▒▓▓░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▓▓██████████████████████▒▒▒▒▓▓██████░░░░░░░░▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓██████████████▓▓░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░████▒▒▒▒████████▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░██████████████████████████████████░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒██████████████▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒░░░░████▓▓▓▓████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░▒▒████████████████████████████████░░░░░░░░░░░░░░▒▒▒▒▒▒░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒  ██████████████░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░▒▒██▓▓██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░░░██████████████████████████████▒▒░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒░░░░▒▒▒▒▒▒▒▒▒▒░░  ████████████▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░▒▒▓▓██████████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░░░▒▒██████████████████████████▒▒░░░░░░░░░░░░░░░░░░▓▓▒▒▒▒░░▒▒▒▒▓▓▓▓██▒▒░░  ▓▓██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░▒▒▓▓██████████▓▓░░  ░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░░░░░████████████████████▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓██████▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░▒▒▒▒██████████████████░░░░░░░░░░░░░░░░░░░░░░      ░░▓▓▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒██████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▒▒▓▓▒▒▓▓████████▒▒░░░░░░░░░░░░░░░░  ░░░░░░░░░░" << std::endl;
	to_write << "░░░░  ░░▒▒▓▓████████████████░░  ░░  ░░  ░░░░░░  ░░        ░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░  ██████████████        ░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓██████░░          ░░░░░░░░░░░░    ░░" << std::endl;
	to_write << "        ▒▒▒▒▓▓██████████████▒▒          ░░░░    ░░          ▒▒▒▒▒▒▒▒▒▒▒▒░░░░  ████████████▒▒        ░░░░                  ░░░░▒▒▒▒▒▒▒▒▓▓██████░░          ░░░░░░░░░░░░      " << std::endl;
	to_write << "        ▒▒▓▓▓▓████████████████          ░░░░  ░░░░          ▒▒▒▒▒▒▒▒▒▒▒▒░░░░  ████████████▓▓        ░░░░                    ░░▒▒▒▒▒▒▒▒████████          ░░░░░░░░░░  ░░      " << std::endl;
	to_write << "        ▒▒▒▒▒▒████████████████          ░░      ░░          ▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░████████████▒▒        ░░░░                    ░░░░▒▒▒▒▒▒████████          ░░░░░░              " << std::endl;
	to_write << "        ▒▒▓▓▒▒████████████████          ░░      ░░        ░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░▓▓████████████▓▓  ░░    ░░░░                    ░░  ▓▓▒▒▒▒████████          ░░░░░░    ░░        " << std::endl;
	to_write << "      ░░▒▒▒▒▒▒██████████████████        ░░                ░░▓▓▒▒▒▒▒▒▒▒▒▒░░░░████████████████▒▒▓▓    ░░░░                    ░░  ▓▓▒▒▓▓████████          ░░░░░░    ░░        " << std::endl;
	to_write << "      ░░▒▒▓▓▓▓██████████████████        ░░                ▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒████████████████▓▓      ░░░░                    ░░  ▓▓▒▒▓▓████████        ░░░░░░░░    ░░        " << std::endl;
	to_write << "░░░░░░▒▒▒▒▓▓████████████████████░░░░░░░░░░    ░░░░░░░░░░  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████████████████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  ▓▓▒▒▓▓████████  ░░░░░░░░░░░░░░  ░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░▒▒▒▒▒▒▓▓██████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████████████████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░▒▒▒▒▒▒▓▓██████████████████░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒██████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒████████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░  ░░▒▒▒▒▒▒████████████████████░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░░░██████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓██████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░░░▒▒▒▒▒▒████████████████████░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░██████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▒▒▒▒▒▒▒▒████████████████████░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░██▓▓██████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▒▒▒▒▒▒▒▒████████████████████░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒▒░░▒▒████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒██████▓▓▓▓░░▒▒▓▓▒▒░░░░░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▒▒▒▒▒▒▒▒████████████████████░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒░░▒▒░░▒▒▒▒████████▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▓▓████▓▓▒▒▓▓▒▒▒▒▓▓░░▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▒▒▒▒▒▒▓▓████████████████████░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓▓██████▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░" << std::endl;
	to_write << "░░░░▒▒▒▒▒▒▒▒██████████████████▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▓▓▒▒▓▓██████▓▓░░░░░░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░" << std::endl;
	to_write << "▒▒▒▒▒▒▒▒▒▒▓▓██████████████████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒░░▓▓▓▓▓▓▓▓██████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓██▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒" << std::endl;
	to_write << "▒▒▒▒▒▒▒▒▓▓██████████████████████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓████▒▒▒▒▒▒██████████████▓▓▓▓▓▓██▓▓▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒" << std::endl;
	to_write << "▒▒▒▒▒▒▒▒██████████████████████████▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▓▓▓▓██▓▓▒▒▓▓▒▒▓▓██████▒▒▒▒▓▓██████████████▓▓████████████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▓▓██▒▒▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒" << std::endl;
	to_write << "▒▒▒▒▒▒██████████████████████████████▓▓▓▓▒▒▓▓▓▓▒▒▓▓████▓▓██████████████████▒▒▒▒▓▓██████████████████████████████▓▓▓▓▒▒▓▓▓▓▒▒▓▓▓▓██▓▓████▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓" << std::endl;
	to_write << "▓▓▓▓▓▓████████████████████████████████████▓▓████▓▓▓▓▓▓████████████████████▒▒▒▒▓▓▓▓████████████████████████████████▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓" << std::endl;
	to_write << "██████████████████████████████████████████████▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒▓▓▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▓▓" << std::endl;
	to_write << "████████████████████████████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓" << std::endl;
	to_write << "██████████████████████████████████████████▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓" << std::endl;
	to_write << "████████████████████████████████████████▒▒▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓████" << std::endl;
	to_write << "██████████████████████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓██▓▓██▓▓▓▓▓▓████▓▓▓▓▓▓██▓▓██▓▓▓▓██████▓▓▓▓██▓▓▓▓▓▓▓▓▓▓████▓▓▓▓██▓▓██▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓██▓▓" << std::endl;
	to_write << "██████████████████████████████████████▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓" << std::endl;
	to_write << "████████████████████████████████████▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓" << std::endl;
	to_write << "██████▓▓██████████████████████████▓▓▒▒▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓" << std::endl;
	to_write << "██████████████████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓████████████████▓▓▓▓████████████▓▓██▓▓▓▓▓▓██████████▓▓██▓▓▓▓████████████▓▓████▓▓▓▓████████████████" << std::endl;
	to_write << "████▓▓██████████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓████████▓▓▓▓▓▓██████▓▓████████▓▓▓▓██████▓▓▓▓██████▓▓▓▓████████▓▓██████▓▓▓▓████████▓▓████████▓▓▓▓████████▓▓▓▓████" << std::endl;
	to_write << "████▓▓▓▓████████████████████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "██▓▓▓▓▓▓██████████████████▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
	to_write << "▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████" << std::endl;
}